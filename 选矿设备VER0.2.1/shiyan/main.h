/******************************************************************************
Copyright 2005 大连华科仪器有限公司
All rights riserved.

文件名  ：main.h
模块名称：taskstart任务的头文件和一些用户程序的通用数据结构和宏定义

当前版本：0.0.1
修改人	：刘及华
完成日期：2005.04.06
升级说明：create
******************************************************************************/
#ifndef __TEST_H__
#define __TEST_H__

#include "data_type.h"

//#define EN_WD

/*
*********************************************************************************************************
*											   DATA TYPES
*										  (Compiler Specific)
*********************************************************************************************************/
#define 	TRUE                	1
#define 	FALSE               	0
#define 	ok			        	0
#define     notok                   1
//#define     notok                   0xFF
#define 	HIGH		       		1
#define 	LOW				        0
#define 	ON			        	0
#define 	OFF		        		1

//工作模式
#define AUTO		0
#define MANUAL		1

#define AD_QUEUE_LEN     50           //AD队列长度
//#define AD_QUEUE_LEN    32           //AD队列长度
//#define AD_QUEUE_LEN2    3           //AD队列长度
#define AD_QUEUE_LEN2    2           //AD队列长度
//#define AD_QUEUE_LEN2    200           //AD队列长度
/*define queue size*/
//#define		msg_queue_size				0x06
#define          MSG_QUEUE_SIZE     20                /* Size of message queue used in example     */
#define HOU_DU_BIAO_LEN 496         //512 - 16
#define resetpos() (*(void(*)())0)()


#define  		TASK_STK_TINY_SIZE        			32
#define  		TASK_STK_SMALL_SIZE        			64
#define  		TASK_STK_SIZE                  		128
#define  		TASK_STK_BIG_SIZE              		256
#define  		TASK_STK_TCPIP_SIZE              	512



#define	NO_ERROR				0
#define	PSAM_ERROR				0x01
#define	READ_CLOCK_ERROR		0x02
#define	CLOCK_FORMAT_ERROR		0x04
#define	RC500_ERROR				0x08
#define	RAM_ERROR				0x10
#define	NVRAM_ERROR				0x20
#define	FERRO_ERROR				0x40
#define FLASH_ERROR				0x80
#define FLASH_SLV_ERROR			0x0100
#define RX8025_ERROR			0x0200
#define BATTARY_ERROR			0x0400
#define GPS_ID_ERROR			0x0800


#define MAX_REC_NUM				1020
//#define	REC_LEN					32
#define	REC_LEN					48
//#define MAX_REC_NUM_FLASH2		60000
#define MAX_REC_NUM_FLASH2		40000

#define MAX_BLACK_NUM			8000

/******************************************************************************
							部分struct定义部分
******************************************************************************/
//设备状态，最重要的变量，如果增加变量，请在SysInit里进行初始化
typedef struct _DEV_STAT
{
	INT8U err_occured;					// == TRUE出错 ＝＝FALSE设备正常
	INT16U err_code;					//出错代码

	INT16U ad_avg[5][AD_QUEUE_LEN];    //ad最近4次采样值
	INT8U ad_avg_ptr;                   //采样值写入指针
	
	INT8U start;

	INT8U id;							// id号
	INT8U mode;							//模式 AUTO=自动   MANUAL=手动

	INT8U passwd[6];						//进入设置界面的密码

	INT8U reset_times;					//复位次数
	INT16U crc;						   //参数的CRC校验码
	INT8U reptpasswdtimes;			   //进入设置界面的密码

	INT16U record_base_ptr;					//未上传记录指针起始指针(原p0+2) 
	INT16U last_record_base_ptr;			//正常补采的记录起始指针
	INT16U last_record_number;				//正常补采的记录条数

	INT8U end;
	
	INT8U drec[20];							//司机记录 4字节司机编号+8字节车号+7字节时间+1字节上下班标志
	INT8U have_drec;						//是否有未上传的drec，是=TRUE 否=FALSE
	INT8U update_time;						//是否准备与服务器同步时间，是=TRUE 否=FALSE
	INT16U record_number;					//未上传的记录条数(原p0+4)

	//modbus寄存器
	union _MOD_REG
	{
		INT16U reg[16 + 16 + 8 + 2];
		struct _REG_DETAIL
		{
	//		INT16U mod_coil[8];		    //继电器
	//		INT16U mod_input[8];		//DI		
			INT16U switch_on_delay[8];  //继电器通电时间
			INT16U switch_interval[8];  //继电器切换时间间隔
			INT16U mod_inputreg[8];		//输入寄存器--AD
			INT16U mod_holdingreg[ 8];	//保持寄存器--DA
			INT16U switch_delay[8];     //继电器延迟开启时间
			INT16U mod_coil[2];		    //继电器
		}REG_DETAIL;
	}MOD_REG;

	AD_TYPE current_h;					//当前厚度

}DEV_STAT;


//交易记录
typedef struct _RECORD
{
	INT8U card_type;						//卡片类型  1字节
	INT8U card_purchase_type;				//交易类型	1字节
	INT8U psam_purchase_serial_num[3];		//PSAM卡交易序号3字节
//  INT8U bus_number[4];					//车号	4字节
//  INT8U card_serial_number[4];			//发行流水号	8字节
	INT8U card_number[8];					//发行流水号	8字节
	INT8U balance[3];						//交易后余额	3字节
	INT8U fare[3];							//消费金额3字节
	BUS_TIME card_in_time;					//交易时间	7字节
	INT8U purchase_serial_num[2];			//初始的卡内交易序号+1	2字节
	INT8U operator_number[4];				//操作员号	4字节

	INT8U line_number[2];					//线路号	2字节
	INT8U bus_number[3];					//车号		3字节
	INT8U driver_number[4];					//驾驶员号	4字节
	INT8U pos_number[6];					//PSAM卡号	6字节
	INT8U no_use[1];						//备用		1字节

	INT8U crc[2];							//crc校验	2字节
}RECORD;

/******************************************************************************
															部分struct定义部分
******************************************************************************/

void Timer1Init(void);
/*********************************************************************************************************
** 函数名称: Create_Mux_Box
** 功能描述: 创建各个任务所需要德信号量
** 输　      入: 
** 输　      出:
** 全局变量: 
** 调用模块: 
**-------------------------------------------------------------------------------------------------------
** 作　      者: 黄力国
** 日　      期: 2005年1月10日
**-------------------------------------------------------------------------------------------------------
** 修   改   人: 
** 日　      期: 
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/

void		Create_Mux_Box(void);
/*********************************************************************************************************
** 函数名称: Start_beep
** 功能描述: 蜂鸣器鸣叫三声
** 输　      入: 
** 输　      出:
** 全局变量: 
** 调用模块: 
**-------------------------------------------------------------------------------------------------------
** 作　      者: 黄力国
** 日　      期: 2005年1月10日
**-------------------------------------------------------------------------------------------------------
** 修   改   人: 
** 日　      期: 
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
void 		Start_beep(void);
/*********************************************************************************************************
** 函数名称: System_Check
** 功能描述: 检查系统各个设备
** 输　      入: 
** 输　      出:
** 全局变量: 
** 调用模块: 
**-------------------------------------------------------------------------------------------------------
** 作　      者: 黄力国
** 日　      期: 2005年1月10日
**-------------------------------------------------------------------------------------------------------
** 修   改   人: 
** 日　      期: 
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/
INT8U 	System_Check(void);
/******************************************************************************
函数名称：DisplayVersion
功能描述：开机显示版本号
参数描述：
参数名称：	输入/输出？	类型		描述
version	输入		const char*		要显示的版本号，例如输入0x00 0x01 则显示0.0.1

返  回  值：无
				  
作      者	：刘及华
日      期：2004-09-02
修改历史：
	   日期		修改人		修改描述
	   ------		---------	-------------
******************************************************************************/
void DisplayVersion(const char * version);

/*********************************************************************************************************
** 函数名称: TaskStart_CreateTasks
** 功能描述: start task creates other task
** 输　      入: 
** 输　      出:
** 全局变量: 
** 调用模块: 
**-------------------------------------------------------------------------------------------------------
** 作　      者: 黄力国
** 日　      期: 2005年1月10日
**-------------------------------------------------------------------------------------------------------
** 修   改   人: 
** 日　      期: 
**------------------------------------------------------------------------------------------------------
********************************************************************************************************/

void		TaskStart_CreateTasks(void);


/*****************************************************************
函数原型：DisplayID
功能描述：显示ID号
参数描述：无
参数名称：	输入/输出？	类型		描述
-----------		-----------	------	   	-------
返  回  值：无
作      者	：刘及华

日      期	：2005-5-23
修改历史：
日期		修改人		修改描述
------		---------	-------------
*****************************************************************/
void DisplayID(INT32U id);
/******************************************************************************
 函数名称：InitImportantParameter
 功能描述：初始化关键参数
 参数描述：
 参数名称：	输入/输出？	类型		描述
				
 返  回  值：FLOK(0)-写入成功
				 FLNOTOK(0xFF)-前100页全废
				PRI	-	主FLASH失效
				SLV	-	从FLASH失效

 作      者	：刘及华
 日      期：2004-09-02
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
INT8U InitImportantParameter(void);
/******************************************************************************
 函数名称：Get_Passwd
 功能描述：验证密码进入设置POS号状态
 参数描述：
 参数名称：	输入/输出？	类型		描述
				
 返  回  值：ok(0)-验证成功
				 notok(0xFF)-验证失败

 作      者	：刘及华
 日      期：2005-05-20
 修改历史：
		日期		修改人		修改描述
		------		---------	-------------
******************************************************************************/
INT8U Get_Passwd(void);
#endif
/*********************************************************************************************************
**							  End Of File
********************************************************************************************************/
